// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20231102115002_PrimeraMig")]
    partial class PrimeraMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Accesos", b =>
                {
                    b.Property<int>("id_acceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_acceso"));

                    b.Property<string>("codigo_acceso")
                        .HasColumnType("text");

                    b.Property<string>("descripcion_acceso")
                        .HasColumnType("text");

                    b.HasKey("id_acceso");

                    b.ToTable("accesos");
                });

            modelBuilder.Entity("DAL.Autores", b =>
                {
                    b.Property<int>("id_autor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_autor"));

                    b.Property<string>("apellidos_autor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre_autor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_autor");

                    b.ToTable("autores");
                });

            modelBuilder.Entity("DAL.Colecciones", b =>
                {
                    b.Property<int>("id_coleccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_coleccion"));

                    b.Property<string>("nombre_coleccion")
                        .HasColumnType("text");

                    b.HasKey("id_coleccion");

                    b.ToTable("colecciones");
                });

            modelBuilder.Entity("DAL.Editoriales", b =>
                {
                    b.Property<int>("id_editorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_editorial"));

                    b.Property<string>("nombre_editorial")
                        .HasColumnType("text");

                    b.HasKey("id_editorial");

                    b.ToTable("editoriales");
                });

            modelBuilder.Entity("DAL.Estados_Prestamos", b =>
                {
                    b.Property<int>("id_estado_prestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_estado_prestamo"));

                    b.Property<string>("codigo_estado_prestamo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("descripcion_estado_prestamo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_estado_prestamo");

                    b.ToTable("estados_Prestamos");
                });

            modelBuilder.Entity("DAL.Generos", b =>
                {
                    b.Property<int>("id_genero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_genero"));

                    b.Property<string>("descripcion_genero")
                        .HasColumnType("text");

                    b.Property<string>("nombre_genero")
                        .HasColumnType("text");

                    b.HasKey("id_genero");

                    b.ToTable("generos");
                });

            modelBuilder.Entity("DAL.Libros", b =>
                {
                    b.Property<int>("id_libro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_libro"));

                    b.Property<int?>("cantidad_libro")
                        .HasColumnType("integer");

                    b.Property<string>("edicion_libro")
                        .HasColumnType("text");

                    b.Property<int>("id_coleccion")
                        .HasColumnType("integer");

                    b.Property<int>("id_editorial")
                        .HasColumnType("integer");

                    b.Property<int>("id_genero")
                        .HasColumnType("integer");

                    b.Property<string>("isbn_libro")
                        .HasColumnType("text");

                    b.Property<string>("titulo_libro")
                        .HasColumnType("text");

                    b.HasKey("id_libro");

                    b.HasIndex("id_coleccion");

                    b.HasIndex("id_editorial");

                    b.HasIndex("id_genero");

                    b.ToTable("libros");
                });

            modelBuilder.Entity("DAL.Prestamos", b =>
                {
                    b.Property<int>("id_prestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_prestamo"));

                    b.Property<DateTime?>("fch_entrega_prestamo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fch_fin_prestamo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fch_inicio_prestamo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("id_estado_prestamo")
                        .HasColumnType("integer");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.HasKey("id_prestamo");

                    b.HasIndex("id_estado_prestamo");

                    b.HasIndex("id_usuario");

                    b.ToTable("prestamos");
                });

            modelBuilder.Entity("DAL.Rel_Autores_Libros", b =>
                {
                    b.Property<int>("id_autor")
                        .HasColumnType("integer");

                    b.Property<int>("id_libro")
                        .HasColumnType("integer");

                    b.HasKey("id_autor", "id_libro");

                    b.HasIndex("id_libro");

                    b.ToTable("rel_Autores_Libros");
                });

            modelBuilder.Entity("DAL.Rel_Libros_Prestamos", b =>
                {
                    b.Property<int>("id_prestamo")
                        .HasColumnType("integer");

                    b.Property<int>("id_libro")
                        .HasColumnType("integer");

                    b.HasKey("id_prestamo", "id_libro");

                    b.HasIndex("id_libro");

                    b.ToTable("rel_Libros_Prestamos");
                });

            modelBuilder.Entity("DAL.Usuarios", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("apellidos_usuario")
                        .HasColumnType("text");

                    b.Property<string>("clave_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dni_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email_usuario")
                        .HasColumnType("text");

                    b.Property<bool?>("estaBloqueado_usuario")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("fch_alta_usuario")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fch_baja_usuario")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("fch_fin_bloqueo_usuario")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("id_acceso")
                        .HasColumnType("integer");

                    b.Property<string>("nombre_usuario")
                        .HasColumnType("text");

                    b.Property<string>("tlf_usuario")
                        .HasColumnType("text");

                    b.HasKey("id_usuario");

                    b.HasIndex("id_acceso");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("DAL.Libros", b =>
                {
                    b.HasOne("DAL.Colecciones", "Colecciones")
                        .WithMany()
                        .HasForeignKey("id_coleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Editoriales", "Editoriales")
                        .WithMany()
                        .HasForeignKey("id_editorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Generos", "Generos")
                        .WithMany()
                        .HasForeignKey("id_genero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colecciones");

                    b.Navigation("Editoriales");

                    b.Navigation("Generos");
                });

            modelBuilder.Entity("DAL.Prestamos", b =>
                {
                    b.HasOne("DAL.Estados_Prestamos", "Estados_Prestamos")
                        .WithMany()
                        .HasForeignKey("id_estado_prestamo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estados_Prestamos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("DAL.Rel_Autores_Libros", b =>
                {
                    b.HasOne("DAL.Autores", "Autores")
                        .WithMany()
                        .HasForeignKey("id_autor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Libros", "Libros")
                        .WithMany()
                        .HasForeignKey("id_libro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autores");

                    b.Navigation("Libros");
                });

            modelBuilder.Entity("DAL.Rel_Libros_Prestamos", b =>
                {
                    b.HasOne("DAL.Libros", "libro")
                        .WithMany()
                        .HasForeignKey("id_libro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Prestamos", "prestamo")
                        .WithMany()
                        .HasForeignKey("id_prestamo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("libro");

                    b.Navigation("prestamo");
                });

            modelBuilder.Entity("DAL.Usuarios", b =>
                {
                    b.HasOne("DAL.Accesos", "Accesos")
                        .WithMany()
                        .HasForeignKey("id_acceso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accesos");
                });
#pragma warning restore 612, 618
        }
    }
}
